apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: "vp-k8s-operator"
    chart: "vp-k8s-operator-0.2.2"
    control-plane: vp-k8s-operator-controller-manager
  name: vp-k8s-operator-controller-manager
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: vp-k8s-operator-controller-manager
  template:
    metadata:
      labels:
        control-plane: vp-k8s-operator-controller-manager
    spec:
      containers:
        {{- if ".Values.vp-k8s-operator.rbacProxy.enabled" }}
        - name: kube-rbac-proxy
          image: {{ ".Values.vp-k8s-operator.rbacProxy.imageRepository" }}:{{ ".Values.vp-k8s-operator.rbacProxy.imageTag" }}
          args:
            - --secure-listen-address=0.0.0.0:{{ ".Values.vp-k8s-operator.rbacProxy.port" }}
            - --upstream=http://{{".Values.vp-k8s-operator.metricsHost"}}:{{".Values.vp-k8s-operator.metricsPort"}}/
            - --logtostderr=true
            - --v={{ ".Values.vp-k8s-operator.rbacProxy.logLevel" }}
          ports:
            - containerPort: {{ ".Values.vp-k8s-operator.rbacProxy.port" }}
              name: https
        {{- end }}
        - name: manager
          image: {{ ".Values.vp-k8s-operator.imageRepository" }}:{{ ".Values.vp-k8s-operator.imageTag" }}
          imagePullPolicy: {{ ".Values.vp-k8s-operator.imagePullPolicy" }}
          command:
            - /manager
          args:
            - --metrics-addr={{".Values.vp-k8s-operator.metricsHost"}}:{{".Values.vp-k8s-operator.metricsPort"}}
            - --vvp-url={{ ".Values.vp-k8s-operator.vvpUrl" }}
            - --vvp-edition={{ ".Values.vp-k8s-operator.vvpEdition" }}
            {{- if ".Values.vp-k8s-operator.extraArgs" }}
            {{ toYaml ".Values.vp-k8s-operator.extraArgs" | nindent 12 }}
            {{- end }}
          ports:
            - containerPort: 443
              name: webhook-server
              protocol: TCP
          resources:
            {{ toYaml ".Values.vp-k8s-operator.resources" | nindent 12 }}
          volumeMounts:
            - mountPath: /tmp/k8s-webhook-server/serving-certs
              name: cert
              readOnly: true
      terminationGracePeriodSeconds: 10
      volumes:
        - name: cert
          secret:
            defaultMode: 420
            {{- if ".Values.vp-k8s-operator.certs.enabled" }}
            secretName: vp-k8s-operator-webhook-server-cert
            {{- else }}
            secretName: {{ ".Values.vp-k8s-operator.certs.existingSecret" }}
            {{- end }}
